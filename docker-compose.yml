version: '3'

services:
  video-streaming:
    image: py-video-streaming
    build:
      context: ./video-streaming
      dockerfile: Dockerfile
      target: dev
    container_name: py-video-streaming
    ports:
      - "4000:80"
    volumes:
      - "./video-streaming:/app:z"
      - "/tmp/video-streaming/python-cache:/root/.cache:z"
    environment:
      - PORT=80
      - VIDEO_STORAGE_HOST=video-storage
      - VIDEO_STORAGE_PORT=80
      - RABBIT=amqp://guest:guest@rabbit:5672
      - METADATA_HOST=http://metadata
      - FLASK_ENV=development
    restart: 'no'
    depends_on:
      - db
      - rabbit

  video-storage:
    image: py-video-storage
    build:
      context: ./video-storage-azure
      dockerfile: Dockerfile
      target: dev
    container_name: py-video-storage
    ports:
      - "4001:80"
    volumes:
      - "./video-storage-azure:/app:z"
      - "/tmp/video-storage/python-cache:/root/.cache:z"
    environment:
      - PORT=80
      - FLASK_ENV=development
    restart: 'no'

  db:
    image: mongo:4.2
    container_name: py-db
    ports:
      - "4002:27017"
    restart: always

  history:
    image: py-history
    build:
      context: ./history
      dockerfile: Dockerfile
      target: dev
    container_name: py-history
    ports:
      - "4003:80"
    environment:
      - PORT=80
      - DBHOST=mongodb://db:27017
      - DBNAME=history
      - RABBIT=amqp://guest:guest@rabbit:5672
      - FLASK_ENV=development
    volumes:
      - "./history:/app:z"
      - "/tmp/history/python-cache:/root/.cache:z"
    restart: 'no'
    depends_on:
      - db
      - rabbit

  rabbit:
    image: rabbitmq:3.8-management
    container_name: py-rabbit
    ports:
      - "5672:5672"
      - "15672:15672"
    expose:
      - 5672
      - 15672
    restart: always

  recommendations:
    image: py-recommendations
    build:
      context: ./recommendations
      dockerfile: Dockerfile
      target: dev
    container_name: py-recommendations
    environment:
      - RABBIT=amqp://guest:guest@rabbit:5672
    volumes:
      - "./recommendations:/app:z"
      - "/tmp/recommendations/python-cache:/root/.cache:z"
    restart: 'no'
    depends_on:
      - rabbit

  metadata:
    image: py-metadata
    build:
      context: ./metadata
      dockerfile: Dockerfile
      target: dev
    container_name: py-metadata
    ports:
      - "4005:80"
    environment:
      - PORT=80
      - DBHOST=mongodb://db:27017
      - DBNAME=metadata
      - FLASK_ENV=development
    volumes:
      - "./metadata:/app:z"
      - "/tmp/metadata/python-cache:/root/.cache:z"
    restart: 'no'
    depends_on:
      - db

  gateway:
    image: py-gateway
    build:
      context: ./gateway
      dockerfile: Dockerfile
      target: dev
    container_name: py-gateway
    ports:
      - "4006:80"
    environment:
      - PORT=80
      - METADATA_HOST=http://metadata
      - FLASK_ENV=development
    volumes:
      - "./gateway:/app:z"
      - "/tmp/gateway/python-cache:/root/.cache:z"
    restart: 'no'
